#!/bin/bash

DESTPATH="/srv/mirror/{{ item.name }}"
RSYNC=/usr/bin/rsync
LOCKFILE=/tmp/rsync-{{ item.name | regex_replace('\/', '_') }}.lock

synchronize() {
    printf "starting sync for {{ item.name }}\n"
    # Rsync's --chown does not set the owner of the directory itself
    chown {{ item.owner | default('root') }} "$DESTPATH"
    $RSYNC -rlptH --safe-links --delete-delay --delay-updates "--timeout=600" "--contimeout=60" --no-motd --chown={{ item.owner | default('root') }} {{ item.source }} "$DESTPATH" --quiet
}

if [ ! -e "$LOCKFILE" ]
then
    printf %s "$$" >"$LOCKFILE"
    synchronize
else
    PID=$(cat "$LOCKFILE")
    if kill -0 "$PID" >&/dev/null
    then
        printf "rsync - synchronisation for %s still running\n" "$DESTPATH"
        exit 0
    else
        printf %s "$$" >"$LOCKFILE"
        printf "warning: previous synchronization for %s appears not to have finished correctly\n" "$DESTPATH"
        synchronize
    fi
fi

{% if item.name == "archlinux" %}
# if we are called without a tty (cronjob) only run when there are changes
if ! tty -s && [[ -f "$DESTPATH/lastupdate" ]] && diff -b <(curl -Ls {{ item.lastupdate }}) "$target/lastupdate" >/dev/null; then
	# keep lastsync file in sync for statistics generated by the Arch Linux website
	rsync_cmd "$source_url/lastsync" "$target/lastsync"
	exit 0
fi
{% endif %}

rm -f "$LOCKFILE"